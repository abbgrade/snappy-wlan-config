package config

import (
	"fmt"
	"os"
	"strings"
)

type ExportFile struct {
	Export
	_file *os.File
}

func NewExportFile(path string) ExportFile {

	export := ExportFile{}

	Trace.Printf("export: %v", path)
	if dryRun == true {
		export._file = os.Stdout
	} else if file, err := os.Create(path); err != nil {
		Warning.Fatalf("export %v : %v", path, err)
	} else {
		export._file = file
	}

	// check write access
	if _, err := fmt.Fprint(export._file, ""); err != nil {
		Warning.Fatalf("%v : %v", path, err)
	}

	return export
}

func (export *ExportFile) Flush() {
	export.Extend("", "")
	export._file.WriteString(strings.Join(export.Lines, "\n"))
	export._file.Sync()
}

func (export *ExportFile) Close() {

	if dryRun == false {
		export._file.Close()
	}
}

func (export *ExportFile) AddHeader(toolName string) {

	export.Extend(""+
		"##", ""+
		"# DO NOT CHANGE THIS FILE", ""+
		fmt.Sprintf("## %v config", toolName), ""+
		"# This config file is generated by snappy-wlan-config,", ""+
		"# manual changes may become reversed.", ""+
		"##", "")

}
